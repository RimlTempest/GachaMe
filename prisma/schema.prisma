generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

// ユーザー
model User {
  id        String   @id @default(uuid())
  email     String   @unique // メールアドレス
  name      String // 氏名
  password  String // パスワード
  age       Int? // 年齢
  gender    String? // 性別
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // ゲームリスト
  Games     Game[]
  // プロフィール
  Profile   Profile?

  // テーブルの物理名
  @@map("users")
}

// プロフィール管理用
model Profile {
  id        String   @id @default(uuid())
  nickName  String   @map("nick_name") // ニックネーム
  image     String? // プロフィール画像
  createdAt DateTime @default(now()) @map("created_at") // 登録日時
  updatedAt DateTime @default(now()) @map("updated_at") // 更新日時
  // 親テーブルの関連づけ
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])

  // テーブルの物理名
  @@map("profiles")
}

// ゲームリスト
model Game {
  id              String           @id @default(uuid())
  title           String // ゲームタイトル
  content         String // ゲーム内容
  image           String? // ゲーム画像
  evaluation      Int?             @default(0) // ゲーム評価
  interest        Int              @default(0) // ゲーム興味度
  price           Int? // 値段
  character       String? // 推しキャラ
  characterImage  String? // 推しキャラ画像
  memo            String? // メモ
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  // ユーザ
  userId          String // ユーザーID
  user            User             @relation(fields: [userId], references: [id])
  // ゲームジャンル
  GameGenre       GameGenre[]
  // ゲームメーカー
  GameMaker       GameMaker?
  // ゲーム消化
  GameConsumption GameConsumption?

  // テーブルの物理名
  @@map("games")
}

// ゲームジャンル
model GameGenre {
  id        String   @id @default(uuid())
  genre     String   @unique // ゲームジャンル
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  gameId    String
  game      Game     @relation(fields: [gameId], references: [id])

  // テーブルの物理名
  @@map("game_genres")
}

// ゲームメーカー
model GameMaker {
  id        String   @id @default(uuid())
  maker     String   @unique // ゲームメーカー
  image     String? // ゲームメーカー画像
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  gameId    String   @unique
  game      Game     @relation(fields: [gameId], references: [id])

  // テーブルの物理名
  @@map("game_makers")
}

// ゲーム消化
model GameConsumption {
  id         String   @id @default(uuid())
  status     Boolean  @default(false) // 消化状況
  progress   Int? // 進捗度
  fun        Int      @default(0) // 面白さ度
  recommend  Int      @default(0) // おすすめ度
  impression String? // 感想
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  gameId     String   @unique
  game       Game     @relation(fields: [gameId], references: [id])

  // テーブルの物理名
  @@map("game_consumptions")
}
